version: '3'
services:

  caddy_site:
    image: caddy
    container_name: caddy_site
    restart: unless-stopped
    volumes:
      - ./site/public:/app/public:rw
      - ./caddy/site/Caddyfile:/etc/caddy/Caddyfile
    networks:
      hex-network:
        aliases:
          - site_service
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
      - "traefik.docker.network=hex-network"

  caddy_auth:
    image: caddy
    container_name: caddy_auth
    restart: unless-stopped
    volumes:
      - ./auth/public:/app/public:rw
      - ./caddy/auth/Caddyfile:/etc/caddy/Caddyfile
    networks:
      hex-network:
        aliases:
          - auth_service
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.back_auth.rule=Host(`auth_service`)"
      - "traefik.docker.network=hex-network"

  caddy_pokemon:
    image: caddy
    container_name: caddy_pokemon
    restart: unless-stopped
    volumes:
      - ./pokemon/public:/app/public:rw
      - ./caddy/pokemon/Caddyfile:/etc/caddy/Caddyfile
    networks:
      hex-network:
        aliases:
          - pokemon_service
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.back_pokemon.rule=Host(`pokemon_service`)"
      - "traefik.docker.network=hex-network"

  caddy_stats:
    image: caddy
    container_name: caddy_stats
    restart: unless-stopped
    volumes:
      - ./stats/public:/app/public:rw
      - ./caddy/stats/Caddyfile:/etc/caddy/Caddyfile
    networks:
      hex-network:
        aliases:
          - stats_service
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.back_stats.rule=Host(`stats_service`)"
      - "traefik.docker.network=hex-network"


#  nginx_site:
#    image: nginx:latest
#    container_name: nginx_site
#    restart: unless-stopped
#    volumes:
#      - ./nginx/site.conf:/etc/nginx/nginx.conf
#    networks:
#      hex-network:
#        aliases:
#          - site_service
#    labels:
#      - "traefik.enable=true"
#      - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
#      - "traefik.docker.network=hex-network"
#
#  nginx_auth:
#    image: nginx:latest
#    container_name: nginx_auth
#    restart: unless-stopped
#    volumes:
#      - ./nginx/auth.conf:/etc/nginx/nginx.conf
#    networks:
#      hex-network:
#        aliases:
#          - auth_service
#    labels:
#      - "traefik.enable=true"
#      - "traefik.http.routers.back_auth.rule=Host(`auth_service`)"
#      - "traefik.docker.network=hex-network"
#
#  nginx_pokemon:
#    image: nginx:latest
#    container_name: nginx_pokemon
#    restart: unless-stopped
#    volumes:
#      - ./nginx/pokemon.conf:/etc/nginx/nginx.conf
#    networks:
#      hex-network:
#        aliases:
#          - pokemon_service
#    labels:
#      - "traefik.enable=true"
#      - "traefik.http.routers.back_pokemon.rule=Host(`pokemon_service`)"
#      - "traefik.docker.network=hex-network"
#
#  nginx_stats:
#    image: nginx:latest
#    container_name: nginx_stats
#    restart: unless-stopped
#    volumes:
#      - ./nginx/stats.conf:/etc/nginx/nginx.conf
#    networks:
#      hex-network:
#        aliases:
#          - stats_service
#    labels:
#      - "traefik.enable=true"
#      - "traefik.http.routers.back_stats.rule=Host(`stats_service`)"
#      - "traefik.docker.network=hex-network"

  traefik:
    image: traefik:latest
    container_name: "traefik"
    command:
      - "--api.insecure=true"
      - "--log.level=DEBUG"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      hex-network:
        aliases:
          - gateway

  site:
    build:
      context: ./site
    user: "1000:1000"
    container_name: site
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./site/:/app:rw
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - hex-network

  auth:
    build:
      context: ./auth
    user: "1000:1000"
    container_name: auth
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./auth/:/app:rw
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - hex-network

  pokemon:
    build:
      context: ./pokemon
    user: "1000:1000"
    container_name: pokemon
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./pokemon/:/app:rw
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - hex-network

  stats:
    build:
      context: ./stats
    user: "1000:1000"
    container_name: stats
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./stats/:/app:rw
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - hex-network

  mariadb:
    image: mariadb
    container_name: mariadb
    restart: unless-stopped
    ports:
      - "3306:3306"
    volumes:
      - ./mariadb:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: auth
    networks:
      - hex-network

networks:
  hex-network:
    driver: bridge